d = runif(10, -2,2)
data = mirt::simdata(a,d,10000, '2PL')
fit = mirt(data,
model=1,
itemtype='2PL')
m2 = M2(fit)
m2
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 35), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items, 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 35)), color = "black", size = .5) +
path = '~/Documents/m2sim1d/'
m2_mirt = m2_torch = c()
for (i in 1:1000){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = 500)
)
plot(density(m2_torch), xlim=c(-10, 500))
library(ggplot2)
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items, 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
plot(m2_mirt, m2_torch, main='M2 1d 5 items')
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 35), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items, 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 35), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 35), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
a = runif(15, .5, 2)
d = runif(15, -2,2)
data = mirt::simdata(a,d,10000, '2PL')
fit = mirt(data,
model=1,
itemtype='2PL')
m2 = M2(fit)
m2
path = '~/Documents/m2sim1d15/'
m2_mirt = m2_torch = c()
for (i in 1:10){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
path = '~/Documents/m2sim1d15/'
m2_mirt = m2_torch = c()
for (i in 1:10){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = 500)
)
plot(density(m2_torch), xlim=c(-10, 500))
library(ggplot2)
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
m2_mirt
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = 10)
)
path = '~/Documents/m2sim1d/'
m2_mirt = m2_torch = c()
for (i in 1:1000){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = 1000)
)
plot(density(m2_torch), xlim=c(-10, 500))
library(ggplot2)
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 35), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 35), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
path = '~/Documents/m2sim1d15/'
m2_mirt = m2_torch = c()
nrep = 18
for (i in 1:nrep){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = nrep)
)
plot(density(m2_torch), xlim=c(-10, 500))
library(ggplot2)
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
path = '~/Documents/m2sim1d15/'
m2_mirt = m2_torch = c()
nrep = 40
for (i in 1:nrep){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = nrep)
)
plot(density(m2_torch), xlim=c(-10, 500))
library(ggplot2)
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (10 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (15 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
path = '~/Documents/m2sim1d15/'
m2_mirt = m2_torch = c()
nrep = 180
for (i in 1:nrep){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
path = '~/Documents/m2sim1d15/'
m2_mirt = m2_torch = c()
nrep = 150
for (i in 1:nrep){
m2_mirt = c(m2_mirt, scan(paste0(path, 'mirt_m2_', i, '.txt')))
m2_torch = c(m2_torch, scan(paste0(path, 'torch_m2_', i, '.txt')))
}
data <- data.frame(
value = c(m2_mirt, m2_torch),
method = rep(c("mirt", "torch"), each = nrep)
)
plot(density(m2_torch), xlim=c(-10, 500))
library(ggplot2)
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (15 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()
# Plot
ggplot(data, aes(x = value, fill=method, color=method)) +
geom_density(bins = 30, alpha = 0.5, position = "identity") +
stat_function(fun = dchisq, args = list(df = 90), color = "black", size = .5) +
labs(
title = "Density of M2 statistic (15 items (df 90), 1000 replications)",
x = "Value",
y = "Density"
) +
theme_minimal()  +
xlim(-10, 200)
########################## GDINA ###################################
# itempars plot GDINA
results %>%
filter((decay == .9 &  lr==.01)| est == 'MML', model=='GDINA') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("MML iw", "VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
filter(mse_itempars<0.03) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
########################## GDINA ###################################
# itempars plot GDINA
results %>%
filter((decay == .999 &  lr==.01)| est == 'MML', model=='GDINA') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("MML iw", "VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
filter(mse_itempars<0.03) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((decay == .999 &  lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=runtime, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((decay == .9 &  lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=runtime, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((decay == .9 &  lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=runtime, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
results
######################### MIXIRT ############################
results %>%
filter((decay == .9 &  lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=runtime, x=method, col=method)) +
facet_grid(mirt_dim~decay, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=runtime, x=method, col=method)) +
facet_grid(mirt_dim~decay, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(mirt_dim~decay, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=lca_acc, x=method, col=method)) +
facet_grid(mirt_dim~decay, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
######################### MIXIRT ############################
results %>%
filter((lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(mirt_dim~decay, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
########################## GDINA ###################################
# itempars plot GDINA
results %>%
filter((decay == .999 &  lr==.01)| est == 'MML', model=='GDINA') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("MML iw", "VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
filter(mse_itempars<0.03) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
########################## GDINA ###################################
# itempars plot GDINA
results %>%
filter((decay == .999 &  lr==.01)| est == 'MML', model=='GDINA') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("MML iw", "VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
filter(mse_itempars<0.03) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
########################## GDINA ###################################
# itempars plot GDINA
results %>%
filter((decay == .9 &  lr==.01)| est == 'MML', model=='GDINA') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("MML iw", "VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
filter(mse_itempars<0.03) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
########################## GDINA ###################################
# itempars plot GDINA
results %>%
filter((decay == .999 &  lr==.01)| est == 'MML', model=='GDINA') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("MML iw", "VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
filter(mse_itempars<0.03) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(nclass~nitems, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
library(poLCA)
library(clue)
library(reticulate)
np <- import("numpy")
# data reading
# read command line arguments
args = commandArgs(trailingOnly = FALSE)
# set working directory to the directory above
filename = strsplit(args[grep("--file=", commandArgs(trailingOnly = FALSE))], '=')[[1]][2]
NCLASS=10
NITEMS=100
replication=1
NREP=1
data = np$load(path.expand(paste0(c('./saved_data/LCA/data/', NCLASS, '_', NITEMS, '_', replication, '.npy'), collapse = ''))) +1
setwd("/Users/karel/Documents/GitHub/Discrete_VAEs")
data = np$load(path.expand(paste0(c('./saved_data/LCA/data/', NCLASS, '_', NITEMS, '_', replication, '.npy'), collapse = ''))) +1
data = np$load(path.expand(paste0(c('./saved_data/LCA/data/', NCLASS, '_', NITEMS, '_', replication, '.npy'), collapse = ''))) +1
true_class = np$load(path.expand(paste0(c('./saved_data/LCA/class/', NCLASS, '_', NITEMS,'.npy'), collapse = '')))
true_probs = np$load(path.expand(paste0(c('./saved_data/LCA/itempars/', NCLASS, '_', NITEMS,'.npy'), collapse = '')))
true_probs= matrix(true_probs, nrow=nrow(true_probs))
# fit model
data = data.frame(data)
f <- as.formula(paste("cbind(", paste(colnames(data), collapse = ","), ") ~ 1"))
t1 = Sys.time()
lca = poLCA(f, data, nclass = NCLASS, nrep = NREP)
runtime = as.numeric(Sys.time()-t1,units="secs")
runtime
lca
library(reticulate)
library(GDINA)
np <- import("numpy")
NREP=1
# read comman
NATTRIBUTES=10
replicaiton=1
NITEMS=100
expand_interactions <- function(attributes) {
n_attributes <- ncol(attributes)
n_effects <- 2^n_attributes - 1
batch_size <- nrow(attributes)
# Generate SxA matrix where each row represents whether each attribute is needed for each effect
required_mask <- t(sapply(1:n_effects, function(x) as.integer(intToBits(x)[1:n_attributes])))
# Repeat the matrix for each observation (BxSxA)
required_mask <- array(rep(required_mask, each = batch_size), dim = c(batch_size, n_effects, n_attributes))
# Repeat the observed attribute pattern for each possible combination (BxSxA)
attributes <- aperm(abind::abind(replicate(n_effects, attributes, simplify=F),along = 3), c(1,3,2))
# Set the observed attributes to 1 if they are not required for a pattern
attributes[!required_mask] <- 1
# Multiply over the different attributes, so that we get the probability of observing all necessary attributes
effects <- apply(attributes, c(1, 2), prod)
return(effects)
}
reverse_expand_interactions <- function(effects, n_attributes) {
batch_size <- nrow(effects)
n_effects <- 2^n_attributes - 1
# Reconstruct the required_mask
required_mask <- t(sapply(1:n_effects, function(x) as.integer(intToBits(x)[1:n_attributes])))
# Initialize the Q matrix
Q_matrix <- matrix(0, nrow = batch_size, ncol = n_attributes)
# Iterate over each item (row in effects)
for (i in 1:batch_size) {
# Find which effects are active for this item
active_effects <- which(effects[i, ] == 1)
# Determine which attributes are required for these active effects
required_attributes <- colSums(required_mask[active_effects, , drop = FALSE]) > 0
# Update the Q matrix
Q_matrix[i, ] <- as.integer(required_attributes)
}
return(Q_matrix)
}
data = np$load(path.expand(paste0(c('./saved_data/GDINA/data/', NATTRIBUTES, '_', NITEMS, '_', replication, '.npy'), collapse = '')))
true_att = np$load(path.expand(paste0(c('./saved_data/GDINA/class/', NATTRIBUTES, '_', NITEMS,'.npy'), collapse = '')))
true_itempars = np$load(path.expand(paste0(c('./saved_data/GDINA/itempars/', NATTRIBUTES, '_', NITEMS,'.npy'), collapse = '')))
true_itempars= matrix(true_itempars, nrow=nrow(true_itempars))
true_delta = true_itempars[,-1]
true_intercepts = true_itempars[,1]
# compute the Q matrix of nitems x n interactions and use it to compute the q matrix of nitems x n attributes
Q = true_delta != 0
Q = reverse_expand_interactions(Q, NATTRIBUTES)
t1 = Sys.time()
mod1 <- GDINA(dat = data, Q = Q, model = "GDINA", att.dist = 'independent')
runtime = runtime = as.numeric(Sys.time()-t1,units="secs")
mod1
extract(mod1, 'df')
mod1$np
mod1$struc.parm
mod1$model
log(0)
log(-1)
######################### MIXIRT ############################
results %>%
filter((lr==.01), model=='MIXIRT') %>%
mutate(method=paste0(est,' ', n_iw_samples,'iw'),
method = factor(method, levels = c("VAE 10iw", "VAE 5iw", "VAE 1iw"))
) %>%
ggplot(aes(y=mse_itempars, x=method, col=method)) +
facet_grid(mirt_dim~decay, scales = 'free_y', ) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
text=element_text(size=20)) +
geom_boxplot()
source("~/gdina.R")
